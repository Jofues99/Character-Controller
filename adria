using System.Collections;
using System.Collections.Generic;
using UnityEngine;

public class PlayerController : MonoBehaviour
{
    public int attackDamage = 40;
    
    public float walkSpeed = 8f;
    public float runSpeed = 11f;
    public float currentSpeed = 1f;
    public Animator animator;

    public Rigidbody rb;

    public Transform attackPoint;
    public float attackRange = 0.5f;
    public LayerMask enemyLayers;

    bool isAttacking;
    bool isJumping;
    bool blockInputs;
    GameObject pushingBox;

    void Start()
    {
        rb = GetComponent<Rigidbody>();
    }

    void Update()
    {
        Move();

        if (!isAttacking && Input.GetMouseButtonDown(0))
        {
            StartCoroutine(Attack());
        }

        if(Input.GetKeyDown(KeyCode.Space) && !isJumping)
        {
            isJumping = true;
            rb.AddForce(new Vector3(0, 5, 0), ForceMode.Impulse);
        }
    }

    void Move()
    {
        var vMove = Input.GetAxis("Vertical");
        float limit = 0.5f;

        if (vMove > 0)
        {
            if (Input.GetKey(KeyCode.LeftShift))
            {
                currentSpeed = runSpeed;
                limit = 1;
            }
        } else {
            currentSpeed = walkSpeed;
        }

        if (!blockInputs)
        {
            animator.SetFloat("Speed", Mathf.Clamp(vMove, -1, limit));
            transform.Translate(new Vector3(0, 0, vMove * currentSpeed * Time.deltaTime));
            transform.Rotate(new Vector3(0, Input.GetAxis("Horizontal") * Time.deltaTime * 100, 0));
        }

        //Debug.Log(transform.forward * 2);

        // Push box
        RaycastHit hit;
        if (Physics.Raycast(transform.position + new Vector3(0, 1, 0), transform.TransformDirection(Vector3.forward), out hit, 0.8f) && hit.collider.gameObject.tag == "Box" && Input.GetKey(KeyCode.E))
        {
            pushingBox = hit.collider.gameObject;

            //pushingBox.GetComponent<Rigidbody>().isKinematic = true;

            blockInputs = true;
            
            // set root (BUG)
            //transform.rotation = pushingBox.transform.rotation;

            if(vMove > 0)
            {
                transform.Translate(new Vector3(0, 0, vMove * 2 * Time.deltaTime));
                //pushingBox.transform.SetParent(transform);
            }
        } else {
            if(pushingBox != null)
            {
                pushingBox.transform.parent = null;
            }
            pushingBox = null;
            blockInputs = false;
        }
    }

    IEnumerator Attack()
    {
        isAttacking = true;
        animator.SetTrigger("Attack");
        Collider[] hitEnemies = Physics.OverlapSphere(attackPoint.position, attackRange, enemyLayers);
        
        foreach(Collider enemy in hitEnemies)
        {
            enemy.GetComponent<EnemyController>().TakeDamage(attackDamage);
            Debug.Log("Hit " + enemy.name);
        }

        yield return new WaitForSeconds(0.7f);
        isAttacking = false;
    }

    private void OnDrawGizmosSelected()
    {
        if (attackPoint == null)
            return;

        Gizmos.DrawWireSphere(attackPoint.position, attackRange);
    }

    void OnTriggerEnter(Collider Collision)
    {
        if(Collision.gameObject.tag == "Item")
        {
            Debug.Log("Item Collected");
            Destroy(Collision.gameObject);
        }
    }

    void OnCollisionEnter(Collision collision)
    {
        if(collision.gameObject.tag == "Ground")
        {
            isJumping = false;
        }
    }
}
